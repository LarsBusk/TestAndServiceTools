// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NoraJitterTool.Model;

#nullable disable

namespace NoraJitterTool.Migrations
{
    [DbContext(typeof(NoraJitterData))]
    [Migration("20230622103402_ChangeTypeChassisID")]
    partial class ChangeTypeChassisID
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NoraJitterTool.Model.Delays", b =>
                {
                    b.Property<int>("DelaysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DelaysId"));

                    b.Property<int>("Delay")
                        .HasColumnType("int");

                    b.Property<DateTime>("OpcServerTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SampleDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SampleNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TestSetupId")
                        .HasColumnType("int");

                    b.Property<int>("TimeBetweenSamples")
                        .HasColumnType("int");

                    b.HasKey("DelaysId");

                    b.HasIndex("TestSetupId");

                    b.ToTable("Delays");
                });

            modelBuilder.Entity("NoraJitterTool.Model.TestSetup", b =>
                {
                    b.Property<int>("TestSetupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TestSetupId"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CsvFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ExcludeFromSummary")
                        .HasColumnType("bit");

                    b.Property<bool>("NoDelayedResults")
                        .HasColumnType("bit");

                    b.Property<string>("NoraVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhysicalPC")
                        .HasColumnType("bit");

                    b.Property<string>("PlatformVersion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TestSystemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TestTime")
                        .HasColumnType("datetime2");

                    b.HasKey("TestSetupId");

                    b.HasIndex("TestSystemId");

                    b.ToTable("TestSetup");
                });

            modelBuilder.Entity("NoraJitterTool.Model.TestSystem", b =>
                {
                    b.Property<int>("TestSystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TestSystemId"));

                    b.Property<long>("ChassisId")
                        .HasColumnType("bigint");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TestSystemId");

                    b.ToTable("TestSystem");
                });

            modelBuilder.Entity("NoraJitterTool.Model.Delays", b =>
                {
                    b.HasOne("NoraJitterTool.Model.TestSetup", "TestSetup")
                        .WithMany("Delays")
                        .HasForeignKey("TestSetupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestSetup");
                });

            modelBuilder.Entity("NoraJitterTool.Model.TestSetup", b =>
                {
                    b.HasOne("NoraJitterTool.Model.TestSystem", "TestSystem")
                        .WithMany("TestSetup")
                        .HasForeignKey("TestSystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestSystem");
                });

            modelBuilder.Entity("NoraJitterTool.Model.TestSetup", b =>
                {
                    b.Navigation("Delays");
                });

            modelBuilder.Entity("NoraJitterTool.Model.TestSystem", b =>
                {
                    b.Navigation("TestSetup");
                });
#pragma warning restore 612, 618
        }
    }
}
