<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="uaConnectivity1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="resource.GdsEndpointDescriptor" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdPcGNMYWJzLkVhc3lPcGNVQSwgVmVyc2lvbj01LjU4LjQ1MS4x
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTZmYWRkY2E0MWRhY2I0MDkMAwAAAFVPcGNM
        YWJzLkJhc2VMaWIsIFZlcnNpb249NS41OC40NTEuMSwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
        b2tlbj02ZmFkZGNhNDFkYWNiNDA5BQEAAAAnT3BjTGFicy5FYXN5T3BjLlVBLlVBRW5kcG9pbnREZXNj
        cmlwdG9yBgAAAAlVcmxTdHJpbmcPTmV0d29ya1NlY3VyaXR5G0NlcnRpZmljYXRlQWNjZXB0YW5jZVBv
        bGljeRdFbmRwb2ludFNlbGVjdGlvblBvbGljeRpTZXJ2ZXJDZXJ0aWZpY2F0ZUJ5dGVBcnJheQxVc2Vy
        SWRlbnRpdHkBBAICAgQoT3BjTGFicy5CYXNlTGliLlNlY3VyaXR5Lk5ldHdvcmtTZWN1cml0eQMAAAAv
        T3BjTGFicy5CYXNlTGliLklkZW50aXR5TW9kZWwuVXNlci5Vc2VySWRlbnRpdHkDAAAAAgAAAAYEAAAA
        GW9wYy50Y3A6Ly8xMjcuMC4wLjE6NDkzMjAJBQAAAAoKCgkGAAAABQUAAAAoT3BjTGFicy5CYXNlTGli
        LlNlY3VyaXR5Lk5ldHdvcmtTZWN1cml0eQQAAAAXQ3VzdG9tTmV0d29ya0NyZWRlbnRpYWwYTmV0d29y
        a0NyZWRlbnRpYWwuRG9tYWluGk5ldHdvcmtDcmVkZW50aWFsLlVzZXJOYW1lGk5ldHdvcmtDcmVkZW50
        aWFsLlBhc3N3b3JkAAEBAQEDAAAAAQYHAAAAAAkHAAAACQcAAAAFBgAAAC9PcGNMYWJzLkJhc2VMaWIu
        SWRlbnRpdHlNb2RlbC5Vc2VyLlVzZXJJZGVudGl0eQQAAAASQW5vbnltb3VzVG9rZW5JbmZvEUtlcmJl
        cm9zVG9rZW5JbmZvEVVzZXJOYW1lVG9rZW5JbmZvGFg1MDlDZXJ0aWZpY2F0ZVRva2VuSW5mbwQEBAQ1
        T3BjTGFicy5CYXNlTGliLklkZW50aXR5TW9kZWwuVXNlci5Bbm9ueW1vdXNUb2tlbkluZm8DAAAANE9w
        Y0xhYnMuQmFzZUxpYi5JZGVudGl0eU1vZGVsLlVzZXIuS2VyYmVyb3NUb2tlbkluZm8DAAAANE9wY0xh
        YnMuQmFzZUxpYi5JZGVudGl0eU1vZGVsLlVzZXIuVXNlck5hbWVUb2tlbkluZm8DAAAAO09wY0xhYnMu
        QmFzZUxpYi5JZGVudGl0eU1vZGVsLlVzZXIuWDUwOUNlcnRpZmljYXRlVG9rZW5JbmZvAwAAAAMAAAAJ
        CAAAAAkJAAAACQoAAAAJCwAAAAUIAAAANU9wY0xhYnMuQmFzZUxpYi5JZGVudGl0eU1vZGVsLlVzZXIu
        QW5vbnltb3VzVG9rZW5JbmZvAQAAAAlJc0VuYWJsZWQAAQMAAAABBQkAAAA0T3BjTGFicy5CYXNlTGli
        LklkZW50aXR5TW9kZWwuVXNlci5LZXJiZXJvc1Rva2VuSW5mbwEAAAAPTmV0d29ya1NlY3VyaXR5BChP
        cGNMYWJzLkJhc2VMaWIuU2VjdXJpdHkuTmV0d29ya1NlY3VyaXR5AwAAAAMAAAAJDAAAAAUKAAAANE9w
        Y0xhYnMuQmFzZUxpYi5JZGVudGl0eU1vZGVsLlVzZXIuVXNlck5hbWVUb2tlbkluZm8CAAAACFVzZXJO
        YW1lCFBhc3N3b3JkAQEDAAAABg0AAAAHS2VwTGFycwYOAAAAEkZvc3NBbmFseXRpY2FsMTIzNAULAAAA
        O09wY0xhYnMuQmFzZUxpYi5JZGVudGl0eU1vZGVsLlVzZXIuWDUwOUNlcnRpZmljYXRlVG9rZW5JbmZv
        AwAAAAhGaWxlTmFtZQ9LZXlTdG9yYWdlRmxhZ3MIUGFzc3dvcmQBAwFBU3lzdGVtLlNlY3VyaXR5LkNy
        eXB0b2dyYXBoeS5YNTA5Q2VydGlmaWNhdGVzLlg1MDlLZXlTdG9yYWdlRmxhZ3MDAAAACQcAAAAE8P//
        /0FTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5Llg1MDlDZXJ0aWZpY2F0ZXMuWDUwOUtleVN0b3Jh
        Z2VGbGFncwEAAAAHdmFsdWVfXwAIBgAAAAkHAAAAAQwAAAAFAAAAAQkHAAAACQcAAAAJBwAAAAs=
</value>
  </data>
  <metadata name="pointBinder1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>183, 17</value>
  </metadata>
  <metadata name="bindingExtender1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>328, 17</value>
  </metadata>
</root>